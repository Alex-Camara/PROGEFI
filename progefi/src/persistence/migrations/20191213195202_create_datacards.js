exports.up = function (knex) {
  return knex.schema
    .createTable('datacard', table => {
      table.increments('id').primary()
      table.string('code')
      table.boolean('validated')
      table.string('datacardPath')
      table.string('photocollectPath')
      table.date('collectDate')
      table.decimal('longitude')
      table.decimal('latitude')
      table.decimal('altitude')
      table.string('country')
      table.string('countryState')
      table.string('municipality')
      table.string('locality')
      table.string('scientificName')
      table.string('commonName')
      table.string('genus')
      table.string('order')
      table.string('family')
      table.string('phylum')
      table.string('kingdom')
      table.string('speciesClass')
      table.string('sex')
      table.string('vegetationType')
      table.string('climateType')
      table.string('lifeStage')
      table
        .integer('deviceId')
        .references('id')
        .inTable('device')
        .onDelete('cascade')
      table
        .integer('modelId')
        .references('id')
        .inTable('model')
        .onDelete('cascade')
      table
        .integer('catalogueId')
        .references('id')
        .inTable('catalogue')
        .onDelete('cascade')
      table
        .integer('collectionId')
        .references('id')
        .inTable('collection')
        .onDelete('cascade')
      table
        .integer('projectId')
        .references('id')
        .inTable('project')
        .onDelete('cascade')
      table
        .integer('collectorId')
        .references('id')
        .inTable('collector')
        .onDelete('cascade')
      table
        .integer('sexId')
        .references('id')
        .inTable('sex')
        .onDelete('cascade')
      table
        .integer('lifeStageId')
        .references('id')
        .inTable('lifeStage')
        .onDelete('cascade')
      table
        .integer('climateTypeId')
        .references('code')
        .inTable('climateType')
        .onDelete('cascade')
      table
        .integer('vegetationTypeId')
        .references('id')
        .inTable('vegetationType')
        .onDelete('cascade')
    })
    .createTable('datacard_has_curators', table => {
      table
        .integer('datacardId')
        .references('id')
        .inTable('datacard')
        .onDelete('cascade')
      table
        .integer('curatorId')
        .references('id')
        .inTable('curator')
        .onDelete('cascade')
    })
}

exports.down = function (knex) {
  return knex.schema.dropTableIfExists('datacard')
}
